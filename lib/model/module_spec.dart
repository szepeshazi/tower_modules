enum Rarity {
  common('Common', maxLevel: 20, maxEffects: 1),
  rare('Rare', maxLevel: 30, maxEffects: 2),
  rarePlus('Rare+', maxLevel: 40, maxEffects: 2),
  epic('Epic', maxLevel: 60, maxEffects: 3),
  epicPlus('Epic+', maxLevel: 80, maxEffects: 3),
  legendary('Legendary', maxLevel: 100, maxEffects: 3),
  legendaryPlus('Legendary+', maxLevel: 120, maxEffects: 4),
  mythic('Mythic', maxLevel: 140, maxEffects: 4),
  mythicPlus('Mythic+', maxLevel: 160, maxEffects: 5),
  ancestral('Ancestral', maxLevel: 200, maxEffects: 6),
  ancestral1s('Ancestral', maxLevel: 220, maxEffects: 7, stars: 1),
  ancestral2s('Ancestral', maxLevel: 240, maxEffects: 7, stars: 2),
  ancestral3s('Ancestral', maxLevel: 260, maxEffects: 8, stars: 3),
  ancestral4s('Ancestral', maxLevel: 280, maxEffects: 8, stars: 4),
  ancestral5s('Ancestral', maxLevel: 300, maxEffects: 8, stars: 5);

  const Rarity(
    this.name, {
    required this.maxLevel,
    required this.maxEffects,
    this.stars,
  });

  final String name;
  final int maxLevel;
  final int maxEffects;

  final int? stars;
}

enum ModuleType {
  cannon('Cannon Module'),
  armor('Armor Module'),
  generator('Generator Module'),
  core('Core Module');

  const ModuleType(this.moduleName);

  final String moduleName;

  String get shortName => moduleName.split(' ').first;
}

/// Percentage based chance multiplied by 1000, i.e. value of 3 means 0.3%
enum RollChance {
  common(rarity: Rarity.common, chance: 462, runningChance: 462),
  rare(rarity: Rarity.rare, chance: 400, runningChance: 862),
  epic(rarity: Rarity.epic, chance: 100, runningChance: 962),
  legendary(rarity: Rarity.legendary, chance: 25, runningChance: 987),
  mythic(rarity: Rarity.mythic, chance: 10, runningChance: 997),
  ancestral(rarity: Rarity.ancestral, chance: 3, runningChance: 1000);

  const RollChance({
    required this.rarity,
    required this.chance,
    required this.runningChance,
  });

  final Rarity rarity;
  final int chance;
  final int runningChance;
}

enum Unit {
  seconds('s'),
  percentage('%'),
  quantity(''),
  multiplier('x'),
  meter('m');

  const Unit(this.symbol);

  final String symbol;
}

enum SubEffect {
  as(name: 'Attack Speed'),
  cc(name: 'Critical Chance', unit: Unit.percentage),
  cf(name: 'Critical Factor'),
  ar(name: 'Attack Range', unit: Unit.meter),
  dpm(name: 'Damage / meter', unit: Unit.meter),
  mc(name: 'Multishot Chance', unit: Unit.percentage),
  mt(name: 'Multishot Targets'),
  rfc(name: 'Rapid Fire Chance', unit: Unit.percentage),
  rfd(name: 'Rapid Fire Duration', unit: Unit.seconds),
  bsc(name: 'Bounce Shot Chance', unit: Unit.percentage),
  bst(name: 'Bounce Shot Targets'),
  bsr(name: 'Bounce Shot Range', unit: Unit.meter),
  scc(name: 'Super Crit Chance', unit: Unit.percentage),
  scm(name: 'Super Crit Multi'),
  rac(name: 'Rend Armor Chance', unit: Unit.percentage),
  ram(name: 'Rend Armor Multi'),
  mram(name: 'Max Rend Armor Multi', unit: Unit.percentage),
  hr(name: 'Health Regen', unit: Unit.percentage),
  def(name: 'Defense %', unit: Unit.percentage),
  dabs(name: 'Defense Absolute', unit: Unit.percentage),
  td(name: 'Thorns Damage'),
  ls(name: 'Lifesteal', unit: Unit.percentage),
  kbc(name: 'Knockback Chance', unit: Unit.percentage),
  kbf(name: 'Knockback force'),
  os(name: 'Orb Speed'),
  orbs(name: 'Orb'),
  sws(name: 'Shockwave Size'),
  swf(name: 'Shockwave Frequency', unit: Unit.seconds),
  lmd(name: 'Land Mine Damage', unit: Unit.percentage),
  lmc(name: 'Land Mine Chance', unit: Unit.percentage),
  lmr(name: 'Land Mine Radius'),
  dd(name: 'Death Defy', unit: Unit.percentage),
  wh(name: 'Wall Health', unit: Unit.percentage),
  wr(name: 'Wall Rebuild', unit: Unit.seconds),
  cab(name: 'Cash Bonus'),
  capw(name: 'Cash / Wave'),
  capk(name: 'Coins / Kill Bonus'),
  cpw(name: 'Coins / Wave'),
  fau(name: 'Free Attack Upgrade', unit: Unit.percentage),
  fdu(name: 'Free Defense Upgrade', unit: Unit.percentage),
  fuu(name: 'Free Utility Upgrade', unit: Unit.percentage),
  ipw(name: 'Interest / Wave', unit: Unit.percentage),
  ra(name: 'Recovery Amount', unit: Unit.percentage),
  mr(name: 'Max Recovery'),
  pc(name: 'Package Chance', unit: Unit.percentage),
  eals(name: 'Enemy Attack Level Skip', unit: Unit.percentage),
  ehls(name: 'Enemy Health Level Skip', unit: Unit.percentage),
  gtb(name: 'Golden Tower - Bonus'),
  gtd(name: 'Golden Tower - Duration', unit: Unit.seconds),
  gtc(name: 'Golden Tower - Cooldown', unit: Unit.seconds),
  bhs(name: 'Black Hole - Size', unit: Unit.meter),
  bhd(name: 'Black Hole - Duration', unit: Unit.seconds),
  bhc(name: 'Black Hole - Cooldown', unit: Unit.seconds),
  slb(name: 'Spotlight - Bonus'),
  sla(name: 'Spotlight - Angle'),
  cfd(name: 'Chrono Field - Duration', unit: Unit.seconds),
  cfr(name: 'Chrono Field - Speed Reduction', unit: Unit.percentage),
  cfc(name: 'Chrono Field - Cooldown', unit: Unit.seconds),
  dwd(name: 'Death Wave - Damage', unit: Unit.multiplier),
  dwq(name: 'Death Wave - Quantity'),
  dwc(name: 'Death Wave - Cooldown', unit: Unit.seconds),
  smd(name: 'Smart Missiles - Damage', unit: Unit.multiplier),
  smq(name: 'Smart Missiles - Quantity'),
  smc(name: 'Smart Missiles - Cooldown', unit: Unit.seconds),
  ilmd(name: 'Inner Land Mines - Damage', unit: Unit.multiplier),
  ilmq(name: 'Inner Land Mines - Quantity'),
  ilmc(name: 'Inner Land Mines - Cooldown', unit: Unit.seconds),
  psd(name: 'Poison Swamp - Damage', unit: Unit.multiplier),
  psqu(name: 'Poison Swamp - Duration', unit: Unit.seconds),
  psc(name: 'Poison Swamp - Cooldown', unit: Unit.seconds),
  cld(name: 'Chain Lightning - Damage', unit: Unit.multiplier),
  clq(name: 'Chain Lightning - Quantity'),
  clc(name: 'Chain Lightning - Chance', unit: Unit.percentage);

  const SubEffect({required this.name, this.unit = Unit.quantity});

  final String name;
  final Unit unit;
}

class SlotValue {
  const SlotValue({
    required this.effect,
    required this.rarity,
    required this.bonus,
    this.negative = false,
  });

  final SubEffect effect;
  final Rarity rarity;
  final String bonus;
  final bool negative;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is SlotValue &&
          runtimeType == other.runtimeType &&
          effect == other.effect &&
          rarity == other.rarity &&
          bonus == other.bonus &&
          negative == other.negative;

  @override
  int get hashCode =>
      effect.hashCode ^ rarity.hashCode ^ bonus.hashCode ^ negative.hashCode;
}

/// Re-roll cost based on number of locked submodule stats
const lockCost = {
  0: 10,
  1: 40,
  2: 160,
  3: 500,
  4: 1000,
  5: 1600,
  6: 2250,
  7: 3000,
};

/// Number of open submodule effect slots based on module level
const moduleLevels = {0: 2, 41: 3, 101: 4, 141: 5, 161: 6, 201: 7, 241: 8};

const subEffectMatrix = <ModuleType, Map<Rarity, List<SlotValue>>>{
  ModuleType.cannon: {
    Rarity.common: [
      SlotValue(effect: SubEffect.as, rarity: Rarity.common, bonus: '0.3'),
      SlotValue(effect: SubEffect.cc, rarity: Rarity.common, bonus: '2'),
      SlotValue(effect: SubEffect.cf, rarity: Rarity.common, bonus: '2'),
      SlotValue(effect: SubEffect.ar, rarity: Rarity.common, bonus: '2'),
      SlotValue(effect: SubEffect.dpm, rarity: Rarity.common, bonus: '0.005'),
    ],
    Rarity.rare: [
      SlotValue(effect: SubEffect.as, rarity: Rarity.rare, bonus: '0.5'),
      SlotValue(effect: SubEffect.cc, rarity: Rarity.rare, bonus: '3'),
      SlotValue(effect: SubEffect.cf, rarity: Rarity.rare, bonus: '4'),
      SlotValue(effect: SubEffect.ar, rarity: Rarity.rare, bonus: '4'),
      SlotValue(effect: SubEffect.dpm, rarity: Rarity.rare, bonus: '0.01'),
      SlotValue(effect: SubEffect.mc, rarity: Rarity.rare, bonus: '3'),
      SlotValue(effect: SubEffect.rfc, rarity: Rarity.rare, bonus: '2'),
      SlotValue(effect: SubEffect.rfd, rarity: Rarity.rare, bonus: '0.4'),
      SlotValue(effect: SubEffect.bsc, rarity: Rarity.rare, bonus: '2'),
      SlotValue(effect: SubEffect.bsr, rarity: Rarity.rare, bonus: '0.5'),
    ],
    Rarity.epic: [
      SlotValue(effect: SubEffect.as, rarity: Rarity.epic, bonus: '0.7'),
      SlotValue(effect: SubEffect.cc, rarity: Rarity.epic, bonus: '4'),
      SlotValue(effect: SubEffect.cf, rarity: Rarity.epic, bonus: '6'),
      SlotValue(effect: SubEffect.ar, rarity: Rarity.epic, bonus: '8'),
      SlotValue(effect: SubEffect.dpm, rarity: Rarity.epic, bonus: '0.025'),
      SlotValue(effect: SubEffect.mc, rarity: Rarity.epic, bonus: '5'),
      SlotValue(effect: SubEffect.mt, rarity: Rarity.epic, bonus: '1'),
      SlotValue(effect: SubEffect.rfc, rarity: Rarity.epic, bonus: '4'),
      SlotValue(effect: SubEffect.rfd, rarity: Rarity.epic, bonus: '0.8'),
      SlotValue(effect: SubEffect.bsc, rarity: Rarity.epic, bonus: '3'),
      SlotValue(effect: SubEffect.bst, rarity: Rarity.epic, bonus: '1'),
      SlotValue(effect: SubEffect.bsr, rarity: Rarity.epic, bonus: '0.8'),
      SlotValue(effect: SubEffect.scc, rarity: Rarity.epic, bonus: '3'),
      SlotValue(effect: SubEffect.scm, rarity: Rarity.epic, bonus: '2'),
    ],
    Rarity.legendary: [
      SlotValue(effect: SubEffect.as, rarity: Rarity.legendary, bonus: '1'),
      SlotValue(effect: SubEffect.cc, rarity: Rarity.legendary, bonus: '6'),
      SlotValue(effect: SubEffect.cf, rarity: Rarity.legendary, bonus: '8'),
      SlotValue(effect: SubEffect.ar, rarity: Rarity.legendary, bonus: '12'),
      SlotValue(effect: SubEffect.dpm, rarity: Rarity.legendary, bonus: '0.04'),
      SlotValue(effect: SubEffect.mc, rarity: Rarity.legendary, bonus: '7'),
      SlotValue(effect: SubEffect.mt, rarity: Rarity.legendary, bonus: '2'),
      SlotValue(effect: SubEffect.rfc, rarity: Rarity.legendary, bonus: '6'),
      SlotValue(effect: SubEffect.rfd, rarity: Rarity.legendary, bonus: '1.4'),
      SlotValue(effect: SubEffect.bsc, rarity: Rarity.legendary, bonus: '5'),
      SlotValue(effect: SubEffect.bst, rarity: Rarity.legendary, bonus: '2'),
      SlotValue(effect: SubEffect.bsr, rarity: Rarity.legendary, bonus: '1.2'),
      SlotValue(effect: SubEffect.scc, rarity: Rarity.legendary, bonus: '5'),
      SlotValue(effect: SubEffect.scm, rarity: Rarity.legendary, bonus: '3'),
      SlotValue(effect: SubEffect.rac, rarity: Rarity.legendary, bonus: '2'),
      SlotValue(effect: SubEffect.ram, rarity: Rarity.legendary, bonus: '2'),
      SlotValue(effect: SubEffect.mram, rarity: Rarity.legendary, bonus: '200'),
    ],
    Rarity.mythic: [
      SlotValue(effect: SubEffect.as, rarity: Rarity.mythic, bonus: '3'),
      SlotValue(effect: SubEffect.cc, rarity: Rarity.mythic, bonus: '8'),
      SlotValue(effect: SubEffect.cf, rarity: Rarity.mythic, bonus: '12'),
      SlotValue(effect: SubEffect.ar, rarity: Rarity.mythic, bonus: '20'),
      SlotValue(effect: SubEffect.dpm, rarity: Rarity.mythic, bonus: '0.075'),
      SlotValue(effect: SubEffect.mc, rarity: Rarity.mythic, bonus: '10'),
      SlotValue(effect: SubEffect.mt, rarity: Rarity.mythic, bonus: '3'),
      SlotValue(effect: SubEffect.rfc, rarity: Rarity.mythic, bonus: '9'),
      SlotValue(effect: SubEffect.rfd, rarity: Rarity.mythic, bonus: '2.5'),
      SlotValue(effect: SubEffect.bsc, rarity: Rarity.mythic, bonus: '9'),
      SlotValue(effect: SubEffect.bst, rarity: Rarity.mythic, bonus: '3'),
      SlotValue(effect: SubEffect.bsr, rarity: Rarity.mythic, bonus: '1.8'),
      SlotValue(effect: SubEffect.scc, rarity: Rarity.mythic, bonus: '7'),
      SlotValue(effect: SubEffect.scm, rarity: Rarity.mythic, bonus: '5'),
      SlotValue(effect: SubEffect.rac, rarity: Rarity.mythic, bonus: '5'),
      SlotValue(effect: SubEffect.ram, rarity: Rarity.mythic, bonus: '5'),
      SlotValue(effect: SubEffect.mram, rarity: Rarity.mythic, bonus: '300'),
    ],
    Rarity.ancestral: [
      SlotValue(effect: SubEffect.as, rarity: Rarity.ancestral, bonus: '5'),
      SlotValue(effect: SubEffect.cc, rarity: Rarity.ancestral, bonus: '10'),
      SlotValue(effect: SubEffect.cf, rarity: Rarity.ancestral, bonus: '15'),
      SlotValue(effect: SubEffect.ar, rarity: Rarity.ancestral, bonus: '30'),
      SlotValue(effect: SubEffect.dpm, rarity: Rarity.ancestral, bonus: '0.15'),
      SlotValue(effect: SubEffect.mc, rarity: Rarity.ancestral, bonus: '13'),
      SlotValue(effect: SubEffect.mt, rarity: Rarity.ancestral, bonus: '4'),
      SlotValue(effect: SubEffect.rfc, rarity: Rarity.ancestral, bonus: '12'),
      SlotValue(effect: SubEffect.rfd, rarity: Rarity.ancestral, bonus: '3.5s'),
      SlotValue(effect: SubEffect.bsc, rarity: Rarity.ancestral, bonus: '12'),
      SlotValue(effect: SubEffect.bst, rarity: Rarity.ancestral, bonus: '4'),
      SlotValue(effect: SubEffect.bsr, rarity: Rarity.ancestral, bonus: '2.0'),
      SlotValue(effect: SubEffect.scc, rarity: Rarity.ancestral, bonus: '10'),
      SlotValue(effect: SubEffect.scm, rarity: Rarity.ancestral, bonus: '7'),
      SlotValue(effect: SubEffect.rac, rarity: Rarity.ancestral, bonus: '8'),
      SlotValue(effect: SubEffect.ram, rarity: Rarity.ancestral, bonus: '8'),
      SlotValue(effect: SubEffect.mram, rarity: Rarity.ancestral, bonus: '500'),
    ],
  },
  ModuleType.armor: {
    Rarity.common: [
      SlotValue(effect: SubEffect.hr, rarity: Rarity.common, bonus: '20'),
      SlotValue(effect: SubEffect.def, rarity: Rarity.common, bonus: '1'),
      SlotValue(effect: SubEffect.dabs, rarity: Rarity.common, bonus: '15'),
    ],
    Rarity.rare: [
      SlotValue(effect: SubEffect.hr, rarity: Rarity.rare, bonus: '40'),
      SlotValue(effect: SubEffect.def, rarity: Rarity.rare, bonus: '2'),
      SlotValue(effect: SubEffect.dabs, rarity: Rarity.rare, bonus: '25'),
      SlotValue(effect: SubEffect.lmd, rarity: Rarity.rare, bonus: '30'),
      SlotValue(effect: SubEffect.lmc, rarity: Rarity.rare, bonus: '1.5'),
      SlotValue(effect: SubEffect.lmr, rarity: Rarity.rare, bonus: '0.1'),
    ],
    Rarity.epic: [
      SlotValue(effect: SubEffect.hr, rarity: Rarity.epic, bonus: '60'),
      SlotValue(effect: SubEffect.def, rarity: Rarity.epic, bonus: '3'),
      SlotValue(effect: SubEffect.dabs, rarity: Rarity.epic, bonus: '40'),
      SlotValue(effect: SubEffect.td, rarity: Rarity.epic, bonus: '2'),
      SlotValue(effect: SubEffect.ls, rarity: Rarity.epic, bonus: '0.3'),
      SlotValue(effect: SubEffect.kbc, rarity: Rarity.epic, bonus: '2'),
      SlotValue(effect: SubEffect.kbf, rarity: Rarity.epic, bonus: '0.1'),
      SlotValue(effect: SubEffect.os, rarity: Rarity.epic, bonus: '1'),
      SlotValue(effect: SubEffect.sws, rarity: Rarity.epic, bonus: '0.1'),
      SlotValue(
        effect: SubEffect.swf,
        rarity: Rarity.epic,
        bonus: '1',
        negative: true,
      ),
      SlotValue(effect: SubEffect.lmd, rarity: Rarity.epic, bonus: '50'),
      SlotValue(effect: SubEffect.lmc, rarity: Rarity.epic, bonus: '3'),
      SlotValue(effect: SubEffect.lmr, rarity: Rarity.epic, bonus: '0.15'),
      SlotValue(effect: SubEffect.wh, rarity: Rarity.epic, bonus: '20'),
      SlotValue(
        effect: SubEffect.wr,
        rarity: Rarity.epic,
        bonus: '20',
        negative: true,
      ),
    ],
    Rarity.legendary: [
      SlotValue(effect: SubEffect.hr, rarity: Rarity.legendary, bonus: '100'),
      SlotValue(effect: SubEffect.def, rarity: Rarity.legendary, bonus: '5'),
      SlotValue(effect: SubEffect.dabs, rarity: Rarity.legendary, bonus: '100'),
      SlotValue(effect: SubEffect.td, rarity: Rarity.legendary, bonus: '4'),
      SlotValue(effect: SubEffect.ls, rarity: Rarity.legendary, bonus: '0.5'),
      SlotValue(effect: SubEffect.kbc, rarity: Rarity.legendary, bonus: '4'),
      SlotValue(effect: SubEffect.kbf, rarity: Rarity.legendary, bonus: '0.4'),
      SlotValue(effect: SubEffect.os, rarity: Rarity.legendary, bonus: '1.5'),
      SlotValue(effect: SubEffect.orbs, rarity: Rarity.legendary, bonus: 'n/a'),
      SlotValue(effect: SubEffect.sws, rarity: Rarity.legendary, bonus: '0.3'),
      SlotValue(
        effect: SubEffect.swf,
        rarity: Rarity.legendary,
        bonus: '2',
        negative: true,
      ),
      SlotValue(effect: SubEffect.lmd, rarity: Rarity.legendary, bonus: '150'),
      SlotValue(effect: SubEffect.lmc, rarity: Rarity.legendary, bonus: '6'),
      SlotValue(effect: SubEffect.lmr, rarity: Rarity.legendary, bonus: '0.3'),
      SlotValue(effect: SubEffect.dd, rarity: Rarity.legendary, bonus: '1.5'),
      SlotValue(effect: SubEffect.wh, rarity: Rarity.legendary, bonus: '40'),
      SlotValue(
        effect: SubEffect.wr,
        rarity: Rarity.legendary,
        bonus: '40',
        negative: true,
      ),
    ],
    Rarity.mythic: [
      SlotValue(effect: SubEffect.hr, rarity: Rarity.mythic, bonus: '200'),
      SlotValue(effect: SubEffect.def, rarity: Rarity.mythic, bonus: '6'),
      SlotValue(effect: SubEffect.dabs, rarity: Rarity.mythic, bonus: '500'),
      SlotValue(effect: SubEffect.td, rarity: Rarity.mythic, bonus: '7'),
      SlotValue(effect: SubEffect.ls, rarity: Rarity.mythic, bonus: '1.5'),
      SlotValue(effect: SubEffect.kbc, rarity: Rarity.mythic, bonus: '6'),
      SlotValue(effect: SubEffect.kbf, rarity: Rarity.mythic, bonus: '0.9'),
      SlotValue(effect: SubEffect.os, rarity: Rarity.mythic, bonus: '2'),
      SlotValue(effect: SubEffect.orbs, rarity: Rarity.mythic, bonus: '1'),
      SlotValue(effect: SubEffect.sws, rarity: Rarity.mythic, bonus: '0.7'),
      SlotValue(
        effect: SubEffect.swf,
        rarity: Rarity.mythic,
        bonus: '3',
        negative: true,
      ),
      SlotValue(effect: SubEffect.lmd, rarity: Rarity.mythic, bonus: '500'),
      SlotValue(effect: SubEffect.lmc, rarity: Rarity.mythic, bonus: '9'),
      SlotValue(effect: SubEffect.lmr, rarity: Rarity.mythic, bonus: '0.75'),
      SlotValue(effect: SubEffect.dd, rarity: Rarity.mythic, bonus: '3.5'),
      SlotValue(effect: SubEffect.wh, rarity: Rarity.mythic, bonus: '90'),
      SlotValue(
        effect: SubEffect.wr,
        rarity: Rarity.mythic,
        bonus: '80',
        negative: true,
      ),
    ],
    Rarity.ancestral: [
      SlotValue(effect: SubEffect.hr, rarity: Rarity.ancestral, bonus: '400'),
      SlotValue(effect: SubEffect.def, rarity: Rarity.ancestral, bonus: '8'),
      SlotValue(
        effect: SubEffect.dabs,
        rarity: Rarity.ancestral,
        bonus: '1000',
      ),
      SlotValue(effect: SubEffect.td, rarity: Rarity.ancestral, bonus: '10'),
      SlotValue(effect: SubEffect.ls, rarity: Rarity.ancestral, bonus: '2.0'),
      SlotValue(effect: SubEffect.kbc, rarity: Rarity.ancestral, bonus: '9'),
      SlotValue(effect: SubEffect.kbf, rarity: Rarity.ancestral, bonus: '1.5'),
      SlotValue(effect: SubEffect.os, rarity: Rarity.ancestral, bonus: '3'),
      SlotValue(effect: SubEffect.orbs, rarity: Rarity.ancestral, bonus: '2'),
      SlotValue(effect: SubEffect.sws, rarity: Rarity.ancestral, bonus: '1'),
      SlotValue(
        effect: SubEffect.swf,
        rarity: Rarity.ancestral,
        bonus: '4',
        negative: true,
      ),
      SlotValue(effect: SubEffect.lmd, rarity: Rarity.ancestral, bonus: '800'),
      SlotValue(effect: SubEffect.lmc, rarity: Rarity.ancestral, bonus: '12'),
      SlotValue(effect: SubEffect.lmr, rarity: Rarity.ancestral, bonus: '1'),
      SlotValue(effect: SubEffect.dd, rarity: Rarity.ancestral, bonus: '5'),
      SlotValue(effect: SubEffect.wh, rarity: Rarity.ancestral, bonus: '120'),
      SlotValue(
        effect: SubEffect.wr,
        rarity: Rarity.ancestral,
        bonus: '100',
        negative: true,
      ),
    ],
  },
  ModuleType.generator: {
    Rarity.common: [
      SlotValue(effect: SubEffect.cab, rarity: Rarity.common, bonus: '0.1'),
      SlotValue(effect: SubEffect.capw, rarity: Rarity.common, bonus: '30'),
      SlotValue(effect: SubEffect.capk, rarity: Rarity.common, bonus: '0.1'),
      SlotValue(effect: SubEffect.cpw, rarity: Rarity.common, bonus: '20'),
      SlotValue(effect: SubEffect.fau, rarity: Rarity.common, bonus: '2'),
      SlotValue(effect: SubEffect.fdu, rarity: Rarity.common, bonus: '2'),
      SlotValue(effect: SubEffect.fuu, rarity: Rarity.common, bonus: '2'),
    ],
    Rarity.rare: [
      SlotValue(effect: SubEffect.cab, rarity: Rarity.rare, bonus: '0.2'),
      SlotValue(effect: SubEffect.capw, rarity: Rarity.rare, bonus: '50'),
      SlotValue(effect: SubEffect.capk, rarity: Rarity.rare, bonus: '0.2'),
      SlotValue(effect: SubEffect.cpw, rarity: Rarity.rare, bonus: '35'),
      SlotValue(effect: SubEffect.fau, rarity: Rarity.rare, bonus: '4'),
      SlotValue(effect: SubEffect.fdu, rarity: Rarity.rare, bonus: '4'),
      SlotValue(effect: SubEffect.fuu, rarity: Rarity.rare, bonus: '4'),
    ],
    Rarity.epic: [
      SlotValue(effect: SubEffect.cab, rarity: Rarity.epic, bonus: '0.3'),
      SlotValue(effect: SubEffect.capw, rarity: Rarity.epic, bonus: '100'),
      SlotValue(effect: SubEffect.capk, rarity: Rarity.epic, bonus: '0.3'),
      SlotValue(effect: SubEffect.cpw, rarity: Rarity.epic, bonus: '60'),
      SlotValue(effect: SubEffect.fau, rarity: Rarity.epic, bonus: '6'),
      SlotValue(effect: SubEffect.fdu, rarity: Rarity.epic, bonus: '6'),
      SlotValue(effect: SubEffect.fuu, rarity: Rarity.epic, bonus: '6'),
      SlotValue(effect: SubEffect.ipw, rarity: Rarity.epic, bonus: '2'),
      SlotValue(effect: SubEffect.ra, rarity: Rarity.epic, bonus: '3'),
      SlotValue(effect: SubEffect.mr, rarity: Rarity.epic, bonus: '0.4'),
      SlotValue(effect: SubEffect.pc, rarity: Rarity.epic, bonus: '5'),
      SlotValue(effect: SubEffect.eals, rarity: Rarity.epic, bonus: '2'),
      SlotValue(effect: SubEffect.ehls, rarity: Rarity.epic, bonus: '2'),
    ],
    Rarity.legendary: [
      SlotValue(effect: SubEffect.cab, rarity: Rarity.legendary, bonus: '0.5'),
      SlotValue(effect: SubEffect.capw, rarity: Rarity.legendary, bonus: '200'),
      SlotValue(effect: SubEffect.capk, rarity: Rarity.legendary, bonus: '0.4'),
      SlotValue(effect: SubEffect.cpw, rarity: Rarity.legendary, bonus: '120'),
      SlotValue(effect: SubEffect.fau, rarity: Rarity.legendary, bonus: '8'),
      SlotValue(effect: SubEffect.fdu, rarity: Rarity.legendary, bonus: '8'),
      SlotValue(effect: SubEffect.fuu, rarity: Rarity.legendary, bonus: '8'),
      SlotValue(effect: SubEffect.ipw, rarity: Rarity.legendary, bonus: '4'),
      SlotValue(effect: SubEffect.ra, rarity: Rarity.legendary, bonus: '5'),
      SlotValue(effect: SubEffect.mr, rarity: Rarity.legendary, bonus: '0.7'),
      SlotValue(effect: SubEffect.pc, rarity: Rarity.legendary, bonus: '8'),
      SlotValue(effect: SubEffect.eals, rarity: Rarity.legendary, bonus: '4'),
      SlotValue(effect: SubEffect.ehls, rarity: Rarity.legendary, bonus: '4'),
    ],
    Rarity.mythic: [
      SlotValue(effect: SubEffect.cab, rarity: Rarity.mythic, bonus: '1.2'),
      SlotValue(effect: SubEffect.capw, rarity: Rarity.mythic, bonus: '500'),
      SlotValue(effect: SubEffect.capk, rarity: Rarity.mythic, bonus: '0.5'),
      SlotValue(effect: SubEffect.cpw, rarity: Rarity.mythic, bonus: '200'),
      SlotValue(effect: SubEffect.fau, rarity: Rarity.mythic, bonus: '10'),
      SlotValue(effect: SubEffect.fdu, rarity: Rarity.mythic, bonus: '10'),
      SlotValue(effect: SubEffect.fuu, rarity: Rarity.mythic, bonus: '10'),
      SlotValue(effect: SubEffect.ipw, rarity: Rarity.mythic, bonus: '6'),
      SlotValue(effect: SubEffect.ra, rarity: Rarity.mythic, bonus: '7'),
      SlotValue(effect: SubEffect.mr, rarity: Rarity.mythic, bonus: '1.0'),
      SlotValue(effect: SubEffect.pc, rarity: Rarity.mythic, bonus: '11'),
      SlotValue(effect: SubEffect.eals, rarity: Rarity.mythic, bonus: '6'),
      SlotValue(effect: SubEffect.ehls, rarity: Rarity.mythic, bonus: '6'),
    ],
    Rarity.ancestral: [
      SlotValue(effect: SubEffect.cab, rarity: Rarity.ancestral, bonus: '2.5'),
      SlotValue(
        effect: SubEffect.capw,
        rarity: Rarity.ancestral,
        bonus: '1000',
      ),
      SlotValue(effect: SubEffect.capk, rarity: Rarity.ancestral, bonus: '0.6'),
      SlotValue(effect: SubEffect.cpw, rarity: Rarity.ancestral, bonus: '350'),
      SlotValue(effect: SubEffect.fau, rarity: Rarity.ancestral, bonus: '12'),
      SlotValue(effect: SubEffect.fdu, rarity: Rarity.ancestral, bonus: '12'),
      SlotValue(effect: SubEffect.fuu, rarity: Rarity.ancestral, bonus: '12'),
      SlotValue(effect: SubEffect.ipw, rarity: Rarity.ancestral, bonus: '8'),
      SlotValue(effect: SubEffect.ra, rarity: Rarity.ancestral, bonus: '10'),
      SlotValue(effect: SubEffect.mr, rarity: Rarity.ancestral, bonus: '1.5'),
      SlotValue(effect: SubEffect.pc, rarity: Rarity.ancestral, bonus: '15'),
      SlotValue(effect: SubEffect.eals, rarity: Rarity.ancestral, bonus: '8'),
      SlotValue(effect: SubEffect.ehls, rarity: Rarity.ancestral, bonus: '8'),
    ],
  },
  ModuleType.core: {
    Rarity.common: [
      SlotValue(effect: SubEffect.bhs, rarity: Rarity.common, bonus: '2'),
      SlotValue(effect: SubEffect.slb, rarity: Rarity.common, bonus: '1.2'),
      SlotValue(effect: SubEffect.dwd, rarity: Rarity.common, bonus: '8'),
      SlotValue(effect: SubEffect.smd, rarity: Rarity.common, bonus: '8'),
      SlotValue(effect: SubEffect.ilmd, rarity: Rarity.common, bonus: '8'),
      SlotValue(effect: SubEffect.psd, rarity: Rarity.common, bonus: '8'),
      SlotValue(effect: SubEffect.cld, rarity: Rarity.common, bonus: '8'),
      SlotValue(effect: SubEffect.clc, rarity: Rarity.common, bonus: '2'),
    ],
    Rarity.rare: [
      SlotValue(effect: SubEffect.bhs, rarity: Rarity.rare, bonus: '4'),
      SlotValue(effect: SubEffect.slb, rarity: Rarity.rare, bonus: '2.5'),
      SlotValue(effect: SubEffect.dwd, rarity: Rarity.rare, bonus: '15'),
      SlotValue(effect: SubEffect.smd, rarity: Rarity.rare, bonus: '15'),
      SlotValue(effect: SubEffect.ilmd, rarity: Rarity.rare, bonus: '15'),
      SlotValue(effect: SubEffect.psd, rarity: Rarity.rare, bonus: '15'),
      SlotValue(effect: SubEffect.cld, rarity: Rarity.rare, bonus: '15'),
      SlotValue(effect: SubEffect.clc, rarity: Rarity.rare, bonus: '4'),
    ],
    Rarity.epic: [
      SlotValue(effect: SubEffect.gtb, rarity: Rarity.epic, bonus: '1'),
      SlotValue(effect: SubEffect.slb, rarity: Rarity.epic, bonus: '3.5'),
      SlotValue(effect: SubEffect.sla, rarity: Rarity.epic, bonus: '3'),
      SlotValue(effect: SubEffect.dwd, rarity: Rarity.epic, bonus: '25'),
      SlotValue(effect: SubEffect.dwq, rarity: Rarity.epic, bonus: 'n/a'),
      SlotValue(effect: SubEffect.smd, rarity: Rarity.epic, bonus: '25'),
      SlotValue(effect: SubEffect.smq, rarity: Rarity.epic, bonus: '1'),
      SlotValue(effect: SubEffect.ilmd, rarity: Rarity.epic, bonus: '25'),
      SlotValue(effect: SubEffect.psd, rarity: Rarity.epic, bonus: '25'),
      SlotValue(effect: SubEffect.cld, rarity: Rarity.epic, bonus: '25'),
      SlotValue(effect: SubEffect.clq, rarity: Rarity.epic, bonus: '1'),
      SlotValue(effect: SubEffect.clc, rarity: Rarity.epic, bonus: '6'),
    ],
    Rarity.legendary: [
      SlotValue(effect: SubEffect.gtb, rarity: Rarity.legendary, bonus: '2'),
      SlotValue(effect: SubEffect.gtd, rarity: Rarity.legendary, bonus: '2'),
      SlotValue(
        effect: SubEffect.gtc,
        rarity: Rarity.legendary,
        bonus: '5',
        negative: true,
      ),
      SlotValue(effect: SubEffect.bhs, rarity: Rarity.legendary, bonus: '8'),
      SlotValue(effect: SubEffect.bhd, rarity: Rarity.legendary, bonus: '2'),
      SlotValue(
        effect: SubEffect.bhc,
        rarity: Rarity.legendary,
        bonus: '2',
        negative: true,
      ),
      SlotValue(effect: SubEffect.slb, rarity: Rarity.legendary, bonus: '10'),
      SlotValue(effect: SubEffect.sla, rarity: Rarity.legendary, bonus: '6'),
      SlotValue(effect: SubEffect.cfd, rarity: Rarity.legendary, bonus: '4'),
      SlotValue(effect: SubEffect.cfr, rarity: Rarity.legendary, bonus: '8'),
      SlotValue(
        effect: SubEffect.cfc,
        rarity: Rarity.legendary,
        bonus: '4',
        negative: true,
      ),
      SlotValue(effect: SubEffect.dwd, rarity: Rarity.legendary, bonus: '50'),
      SlotValue(effect: SubEffect.dwq, rarity: Rarity.legendary, bonus: '1'),
      SlotValue(
        effect: SubEffect.dwc,
        rarity: Rarity.legendary,
        bonus: '6',
        negative: true,
      ),
      SlotValue(effect: SubEffect.smd, rarity: Rarity.legendary, bonus: '50'),
      SlotValue(effect: SubEffect.smq, rarity: Rarity.legendary, bonus: '2'),
      SlotValue(
        effect: SubEffect.smc,
        rarity: Rarity.legendary,
        bonus: '2',
        negative: true,
      ),
      SlotValue(effect: SubEffect.ilmd, rarity: Rarity.legendary, bonus: '50'),
      SlotValue(effect: SubEffect.ilmq, rarity: Rarity.legendary, bonus: '1'),
      SlotValue(
        effect: SubEffect.ilmc,
        rarity: Rarity.legendary,
        bonus: '8',
        negative: true,
      ),
      SlotValue(effect: SubEffect.psd, rarity: Rarity.legendary, bonus: '50'),
      SlotValue(effect: SubEffect.psqu, rarity: Rarity.legendary, bonus: '2'),
      SlotValue(
        effect: SubEffect.psc,
        rarity: Rarity.legendary,
        bonus: '6',
        negative: true,
      ),
      SlotValue(effect: SubEffect.cld, rarity: Rarity.legendary, bonus: '50'),
      SlotValue(effect: SubEffect.clq, rarity: Rarity.legendary, bonus: '2'),
      SlotValue(effect: SubEffect.clc, rarity: Rarity.legendary, bonus: '9'),
    ],
    Rarity.mythic: [
      SlotValue(effect: SubEffect.gtb, rarity: Rarity.mythic, bonus: '3'),
      SlotValue(effect: SubEffect.gtd, rarity: Rarity.mythic, bonus: '4'),
      SlotValue(
        effect: SubEffect.gtc,
        rarity: Rarity.mythic,
        bonus: '8',
        negative: true,
      ),
      SlotValue(effect: SubEffect.bhs, rarity: Rarity.mythic, bonus: '10'),
      SlotValue(effect: SubEffect.bhd, rarity: Rarity.mythic, bonus: '3'),
      SlotValue(
        effect: SubEffect.bhc,
        rarity: Rarity.mythic,
        bonus: '3',
        negative: true,
      ),
      SlotValue(effect: SubEffect.slb, rarity: Rarity.mythic, bonus: '15'),
      SlotValue(effect: SubEffect.sla, rarity: Rarity.mythic, bonus: '11'),
      SlotValue(effect: SubEffect.cfd, rarity: Rarity.mythic, bonus: '7'),
      SlotValue(effect: SubEffect.cfr, rarity: Rarity.mythic, bonus: '11'),
      SlotValue(
        effect: SubEffect.cfc,
        rarity: Rarity.mythic,
        bonus: '7',
        negative: true,
      ),
      SlotValue(effect: SubEffect.dwd, rarity: Rarity.mythic, bonus: '100'),
      SlotValue(effect: SubEffect.dwq, rarity: Rarity.mythic, bonus: '2'),
      SlotValue(
        effect: SubEffect.dwc,
        rarity: Rarity.mythic,
        bonus: '10',
        negative: true,
      ),
      SlotValue(effect: SubEffect.smd, rarity: Rarity.mythic, bonus: '100'),
      SlotValue(effect: SubEffect.smq, rarity: Rarity.mythic, bonus: '4'),
      SlotValue(
        effect: SubEffect.smc,
        rarity: Rarity.mythic,
        bonus: '4',
        negative: true,
      ),
      SlotValue(effect: SubEffect.ilmd, rarity: Rarity.mythic, bonus: '100'),
      SlotValue(effect: SubEffect.ilmq, rarity: Rarity.mythic, bonus: '2'),
      SlotValue(
        effect: SubEffect.ilmc,
        rarity: Rarity.mythic,
        bonus: '10',
        negative: true,
      ),
      SlotValue(effect: SubEffect.psd, rarity: Rarity.mythic, bonus: '100'),
      SlotValue(effect: SubEffect.psqu, rarity: Rarity.mythic, bonus: '5'),
      SlotValue(
        effect: SubEffect.psc,
        rarity: Rarity.mythic,
        bonus: '8',
        negative: true,
      ),
      SlotValue(effect: SubEffect.cld, rarity: Rarity.mythic, bonus: '100'),
      SlotValue(effect: SubEffect.clq, rarity: Rarity.mythic, bonus: '3'),
      SlotValue(effect: SubEffect.clc, rarity: Rarity.mythic, bonus: '12'),
    ],
    Rarity.ancestral: [
      SlotValue(effect: SubEffect.gtb, rarity: Rarity.ancestral, bonus: '4'),
      SlotValue(effect: SubEffect.gtd, rarity: Rarity.ancestral, bonus: '7'),
      SlotValue(
        effect: SubEffect.gtc,
        rarity: Rarity.ancestral,
        bonus: '12',
        negative: true,
      ),
      SlotValue(effect: SubEffect.bhs, rarity: Rarity.ancestral, bonus: '12'),
      SlotValue(effect: SubEffect.bhd, rarity: Rarity.ancestral, bonus: '4'),
      SlotValue(
        effect: SubEffect.bhc,
        rarity: Rarity.ancestral,
        bonus: '-4',
        negative: true,
      ),
      SlotValue(effect: SubEffect.slb, rarity: Rarity.ancestral, bonus: '20'),
      SlotValue(effect: SubEffect.sla, rarity: Rarity.ancestral, bonus: '15'),
      SlotValue(effect: SubEffect.cfd, rarity: Rarity.ancestral, bonus: '10'),
      SlotValue(effect: SubEffect.cfr, rarity: Rarity.ancestral, bonus: '15'),
      SlotValue(
        effect: SubEffect.cfc,
        rarity: Rarity.ancestral,
        bonus: '10',
        negative: true,
      ),
      SlotValue(effect: SubEffect.dwd, rarity: Rarity.ancestral, bonus: '250'),
      SlotValue(effect: SubEffect.dwq, rarity: Rarity.ancestral, bonus: '3'),
      SlotValue(
        effect: SubEffect.dwc,
        rarity: Rarity.ancestral,
        bonus: '13',
        negative: true,
      ),
      SlotValue(effect: SubEffect.smd, rarity: Rarity.ancestral, bonus: '250'),
      SlotValue(effect: SubEffect.smq, rarity: Rarity.ancestral, bonus: '5'),
      SlotValue(
        effect: SubEffect.smc,
        rarity: Rarity.ancestral,
        bonus: '6',
        negative: true,
      ),
      SlotValue(effect: SubEffect.ilmd, rarity: Rarity.ancestral, bonus: '250'),
      SlotValue(effect: SubEffect.ilmq, rarity: Rarity.ancestral, bonus: '3'),
      SlotValue(
        effect: SubEffect.ilmc,
        rarity: Rarity.ancestral,
        bonus: '13',
        negative: true,
      ),
      SlotValue(effect: SubEffect.psd, rarity: Rarity.ancestral, bonus: '250'),
      SlotValue(effect: SubEffect.psqu, rarity: Rarity.ancestral, bonus: '10'),
      SlotValue(
        effect: SubEffect.psc,
        rarity: Rarity.ancestral,
        bonus: '10',
        negative: true,
      ),
      SlotValue(effect: SubEffect.cld, rarity: Rarity.ancestral, bonus: '250'),
      SlotValue(effect: SubEffect.clq, rarity: Rarity.ancestral, bonus: '4'),
      SlotValue(effect: SubEffect.clc, rarity: Rarity.ancestral, bonus: '15'),
    ],
  },
};
